searchState.loadedDescShard("rc_box", 0, "Known unique versions of <code>Rc</code> and <code>Arc</code>. This allows them to …\nKnown unique version of <code>Arc</code>.\nKnown unique version of <code>Rc</code>.\nReturns a raw pointer to the object <code>T</code> pointed to by this …\nReturns a raw pointer to the object <code>T</code> pointed to by this …\nAttempt to downcast the box to a concrete type.\nAttempt to downcast the box to a concrete type.\nAttempt to downcast the box to a concrete type.\nAttempt to downcast the box to a concrete type.\nAttempt to downcast the box to a concrete type.\nAttempt to downcast the box to a concrete type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct an ArcBox from a raw pointer.\nConstruct an RcBox from a raw pointer.\nGet a mutable reference into the <code>ArcBox</code>.\nGet a mutable reference into the <code>RcBox</code>.\nGet a mutable reference into the <code>ArcBox</code>.\nGet a mutable reference into the <code>RcBox</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeconstruct this <code>ArcBox</code>, returning the inner value.\nDeconstruct this <code>RcBox</code>, returning the inner value.\nConsume the <code>ArcBox</code>, returning the wrapped pointer.\nConsume the <code>RcBox</code>, returning the wrapped pointer.\nConsume and leak the <code>ArcBox</code>.\nConsume and leak the <code>RcBox</code>.\nCreate a new ArcBox.\nCreate a new RcBox.\nConstruct a new <code>Pin&lt;ArcBox&lt;T&gt;&gt;</code>. If <code>T</code> does not implement …\nConstruct a new <code>Pin&lt;RcBox&lt;T&gt;&gt;</code>. If <code>T</code> does not implement …")