name: CI
on:
  pull_request:
  merge_group:

env:
  RUSTFLAGS: -D warnings -W unreachable-pub
  MIRIFLAGS: -Zmiri-strict-provenance -Zmiri-symbolic-alignment-check

jobs:
  cargo-test:
    name: Tests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.84

      - name: Enable caching
        uses: Swatinem/rust-cache@v2

      - name: Compile
        run: cargo test --all --all-targets --examples --no-run

      - name: Run tests
        run: cargo test --all --all-targets --examples

  cargo-test-msrv:
    name: Tests (1.80.0)
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install arbitrary nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-01-01

      - name: Install msrv toolchain
        uses: dtolnay/rust-toolchain@1.80

      - name: Generate minimal-versions lockfile
        run: cargo +nightly-2025-01-01 -Zminimal-versions generate-lockfile

      - name: Enable caching
        uses: Swatinem/rust-cache@v2

      - name: Compile
        run: cargo test --locked --all --all-targets --examples --no-run

      - name: Run tests
        run: cargo test --locked --all --all-targets --examples

  cargo-fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.84
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  cargo-clippy:
    name: Lints
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@1.84
        with:
          components: clippy

      - name: Check clippy
        run: cargo clippy --all --all-targets

  cargo-miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri

      - name: Enable caching
        uses: Swatinem/rust-cache@v2

      - name: Miri setup
        run: cargo miri setup

      - name: Miri test
        run: cargo miri test --workspace --all-features
