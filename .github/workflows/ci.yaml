name: CI
on:
  pull_request:
  push: # bors
    branches:
      - staging
      - trying

env:
  CI: 1
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: false
  CARGO_PROFILE_RELEASE_DEBUG: false
  RUSTFLAGS: -D warnings -W unreachable-pub
  MIRIFLAGS: -Zmiri-check-number-validity -Zmiri-symbolic-alignment-check -Zmiri-tag-raw-pointers

jobs:
  cargo-test:
    name: Tests
    if: ${{ github.event.pusher.name == 'bors[bot]' }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          profile: minimal
          override: true

      - name: Enable caching
        uses: Swatinem/rust-cache@v1.3.0

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-targets --examples --no-run

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-targets --examples

  cargo-test-msrv:
    name: Tests (1.41.0)
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install arbitrary nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-01-01
          profile: minimal

      - name: Install msrv toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.41.0
          profile: minimal
          override: true

      - name: Generate minimal-versions lockfile
        uses: actions-rs/cargo@v1
        with:
          command: +nightly-2022-01-01
          args: -Z minimal-versions generate-lockfile

      - name: Enable caching
        uses: Swatinem/rust-cache@v1.3.0

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all --all-targets --examples --no-run

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --all --all-targets --examples

  cargo-fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Instal toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.59.0
          override: true
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  cargo-clippy:
    name: Lints
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.59.0
          override: true
          components: clippy

      - name: Check style
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-targets

  cargo-miri:
    name: Miri
    if: ${{ github.event.pusher.name == 'bors[bot]' }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri

      - name: Enable caching
        uses: Swatinem/rust-cache@v1.3.0

      - name: Miri setup
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup

      - name: Miri test
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --workspace --all-features
